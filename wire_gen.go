// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-playground/validator/v10"
	"github.com/google/wire"
	"github.com/raafly/catering/config"
	"github.com/raafly/catering/controller"
	"github.com/raafly/catering/middleware"
	"github.com/raafly/catering/repository"
	"github.com/raafly/catering/route"
	"github.com/raafly/catering/service"
	"net/http"
)

import (
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from injector.go:

func InitializedEvent() *http.Server {
	customerRepositoryImpl := repository.NewCustomerRepository()
	db := config.NewDB()
	validate := validator.New()
	customerServiceImpl := service.NewCustomerService(customerRepositoryImpl, db, validate)
	customerControllerImpl := controller.NewCustomerController(customerServiceImpl)
	router := route.NewRouter(customerControllerImpl)
	authMiddleware := middleware.NewAuthMiddleware(router)
	server := NewServer(authMiddleware)
	return server
}

// injector.go:

var customerSet = wire.NewSet(repository.NewCustomerRepository, wire.Bind(new(repository.CustomerRepository), new(*repository.CustomerRepositoryImpl)), service.NewCustomerService, wire.Bind(new(service.CustomerService), new(*service.CustomerServiceImpl)), controller.NewCustomerController, wire.Bind(new(controller.CustomerController), new(*controller.CustomerControllerImpl)))
